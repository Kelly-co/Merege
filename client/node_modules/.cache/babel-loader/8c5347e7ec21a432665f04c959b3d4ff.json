{"ast":null,"code":"var _jsxFileName = \"/Users/patriciasaraiva/Desktop/Workspace/Wild_Code/Hackathon_1/merege/client/src/components/Form/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return (\n    /*#__PURE__*/\n\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Project Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Project Name\",\n        ...register(\"projectName\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"exampleRequired\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Form, \"+LcrTzTax1ndAePIwZBfPwbnP68=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useForm","useState","useNavigate","Form","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","required","exampleRequired"],"sources":["/Users/patriciasaraiva/Desktop/Workspace/Wild_Code/Hackathon_1/merege/client/src/components/Form/Form.jsx"],"sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Form = () => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = (data) => console.log(data);\n\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return (\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <label>Project Name</label>\n      <br />\n      {/* register your input into the hook by invoking the \"register\" function */}\n      <input\n        type=\"text\"\n        placeholder=\"Project Name\"\n        {...register(\"projectName\", { required: true })}\n      />\n\n      {/* include validation with required or other standard HTML validation rules */}\n      <input {...register(\"exampleRequired\", { required: true })} />\n      {/* errors will return when field validation fails  */}\n      {errors.exampleRequired && <span>This field is required</span>}\n\n      <input type=\"submit\" />\n    </form>\n  );\n};\n\nexport default Form;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM;IACJC,QADI;IAEJC,YAFI;IAGJC,KAHI;IAIJC,SAAS,EAAE;MAAEC;IAAF;EAJP,IAKFR,OAAO,EALX;;EAMA,MAAMS,QAAQ,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B;;EAEAC,OAAO,CAACC,GAAR,CAAYN,KAAK,CAAC,SAAD,CAAjB,EATiB,CASc;;EAE/B;IAAA;;IACE;IACA;MAAM,QAAQ,EAAED,YAAY,CAACI,QAAD,CAA5B;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;QAAA;QAAA;MAAA,QAFF,eAIE;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,cAFd;QAAA,GAGML,QAAQ,CAAC,aAAD,EAAgB;UAAES,QAAQ,EAAE;QAAZ,CAAhB;MAHd;QAAA;QAAA;QAAA;MAAA,QAJF,eAWE,sBAAWT,QAAQ,CAAC,iBAAD,EAAoB;UAAES,QAAQ,EAAE;QAAZ,CAApB;MAAnB;QAAA;QAAA;QAAA;MAAA,QAXF,EAaGL,MAAM,CAACM,eAAP,iBAA0B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAb7B,eAeE;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QAfF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;AAoBD,CA/BD;;GAAMX,I;UAMAH,O;;;KANAG,I;AAiCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}